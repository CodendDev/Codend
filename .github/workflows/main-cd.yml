name: Push docker images

on:
  push:
    branches: ["main"]
  pull_request:
    branches: ["main"]
  workflow_dispatch:

env:
  DOCKERFILE: ./src/api/Codend.Api/Dockerfile
  IMAGE_NAME: codendapi
  IMAGE_REGISTRY: maksimowiczm
  TEST_IMAGE_TAG: ${{ secrets.AZURE_REGISTRY_LOGIN_SERVER }}/${{ secrets.AZURE_REGISTRY_NAME }}/codendapi-test-build:${{ github.run_id }}

jobs:
  build-test-image:
    name: Build test image
    runs-on: ubuntu-latest

    steps:
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      - name: Login to Azure registry
        uses: docker/login-action@v2
        with:
          registry: ${{ secrets.AZURE_REGISTRY_LOGIN_SERVER }}
          username: ${{ secrets.AZURE_REGISTRY_USERNAME }}
          password: ${{ secrets.AZURE_REGISTRY_TOKEN }}

      - name: Build and export to Azure Registry
        uses: docker/build-push-action@v4
        with:
          push: true
          tags: ${{ env.TEST_IMAGE_TAG }}
          file: ${{ env.DOCKERFILE }}
          target: test
          cache-from: type=gha
          cache-to: type=gha,mode=max

  unit-tests:
    name: Unit tests in Docker
    needs: ["build-test-image"]
    runs-on: ubuntu-latest

    steps:
      - name: Login to Azure registry
        uses: docker/login-action@v2
        with:
          registry: ${{ secrets.AZURE_REGISTRY_LOGIN_SERVER }}
          username: ${{ secrets.AZURE_REGISTRY_USERNAME }}
          password: ${{ secrets.AZURE_REGISTRY_TOKEN }}

      - name: Unit Testing in Docker
        run: docker run --rm ${{ env.TEST_IMAGE_TAG }}

  push-release-image-azure:
    name: Push image on Azure registry
    needs: ["unit-tests"]
    runs-on: ubuntu-latest
    steps:
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      - name: Login to Azure registry
        uses: docker/login-action@v2
        with:
          registry: ${{ secrets.AZURE_REGISTRY_LOGIN_SERVER }}
          username: ${{ secrets.AZURE_REGISTRY_USERNAME }}
          password: ${{ secrets.AZURE_REGISTRY_TOKEN }}

      - name: Get current date
        id: date
        run: echo "date=date::$(date '+%c' --utc)" >> $GITHUB_OUTPUT

      - name: Docker build
        uses: docker/build-push-action@v4
        with:
          build-args: |
            "now=${{ steps.date.outputs.date }}"
          push: ${{ github.event_name != 'pull_request' }}
          tags: ${{ secrets.AZURE_REGISTRY_LOGIN_SERVER }}/${{ secrets.AZURE_REGISTRY_NAME }}/${{ env.IMAGE_NAME }}
          file: ${{ env.DOCKERFILE }}
          cache-from: type=gha
          cache-to: type=gha,mode=max

  push-release-image-dockerhub:
    if: github.event_name == 'push'
    name: Push image on Docker Hub registry
    runs-on: ubuntu-latest
    steps:
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      - name: Checkout
        uses: actions/checkout@v4

      - name: Docker meta
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: |
            ${{ env.IMAGE_REGISTRY }}/${{ env.IMAGE_NAME }}
          tags: |
            type=sha
            type=raw,value=latest,enable={{is_default_branch}}

      - name: Login to Docker Hub registry
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKER_HUB_REGISTRY_USERNAME }}
          password: ${{ secrets.DOCKER_HUB_REGISTRY_TOKEN }}

      - name: Get current date
        id: date
        run: echo "date=date::$(date '+%c' --utc)" >> $GITHUB_OUTPUT

      - name: Docker build
        uses: docker/build-push-action@v5
        with:
          context: .
          build-args: |
            "now=${{ steps.date.outputs.date }}"
          push: ${{ github.event_name != 'pull_request' }}
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
          file: ${{ env.DOCKERFILE }}
          cache-from: type=gha
          cache-to: type=gha,mode=max